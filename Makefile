# Trade Hedge Makefile
# –£–¥–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

.PHONY: help build run test clean docker-build docker-up docker-down logs

# –ü–æ–º–æ—â—å
help:
	@echo "Trade Hedge - –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏—è —É–±—ã—Ç–∫–æ–≤"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  build          - –°–æ–±—Ä–∞—Ç—å –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª"
	@echo "  run            - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ"
	@echo "  test           - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã"
	@echo "  clean          - –û—á–∏—Å—Ç–∏—Ç—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã —Å–±–æ—Ä–∫–∏"
	@echo ""
	@echo "Docker –∫–æ–º–∞–Ω–¥—ã:"
	@echo "  docker-build   - –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
	@echo "  docker-up      - –ó–∞–ø—É—Å—Ç–∏—Ç—å production —Å—Ç–µ–∫"
	@echo "  docker-up-tools - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å Adminer"
	@echo "  docker-down    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å production —Å—Ç–µ–∫"
	@echo "  docker-logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
	@echo ""

	@echo "–£—Ç–∏–ª–∏—Ç—ã:"
	@echo "  deps           - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  lint           - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä"
	@echo "  fmt            - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"

# –õ–æ–∫–∞–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞
build:
	@echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	go build -o trade-hedge ./cmd/trade-hedge

# –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ
run: build
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	./trade-hedge

# –¢–µ—Å—Ç—ã
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
	go test -v ./...

# –û—á–∏—Å—Ç–∫–∞
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤..."
	rm -f trade-hedge
	go clean

# Docker —Å–±–æ—Ä–∫–∞
docker-build:
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	docker build -t trade-hedge:latest .

# –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞
docker-up:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞..."
	@if [ ! -f deploy/local/.env ]; then \
		echo "‚ùå –§–∞–π–ª deploy/local/.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏–∑ config/env.example"; \
		echo "cp config/env.example deploy/local/.env"; \
		exit 1; \
	fi
	cd deploy/local && docker compose up -d

# –ó–∞–ø—É—Å–∫ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ (Adminer)
docker-up-tools:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏..."
	cd deploy/local && docker compose --profile tools up -d

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞
docker-down:
	@echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å—Ç–µ–∫–∞..."
	cd deploy/local && docker compose down

# –õ–æ–≥–∏ Docker
docker-logs:
	@echo "üìã –õ–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	cd deploy/local && docker compose logs -f

# –õ–æ–≥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
logs-app:
	cd deploy/local && docker compose logs -f trade-hedge

logs-db:
	cd deploy/local && docker compose logs -f postgres



# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
deps:
	@echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	go mod download
	go mod tidy

# –õ–∏–Ω—Ç–µ—Ä
lint:
	@echo "üîç –ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–∞..."
	golangci-lint run

# –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
fmt:
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	go fmt ./...

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
setup-env:
	@if [ ! -f deploy/local/.env ]; then \
		cp config/env.example deploy/local/.env; \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª deploy/local/.env –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"; \
		echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ deploy/local/.env –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ API –∫–ª—é—á–∏"; \
	else \
		echo "‚ö†Ô∏è  –§–∞–π–ª deploy/local/.env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi
	@if [ ! -f config/config.yaml ]; then \
		cp config/config.yaml.example config/config.yaml; \
		echo "‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª config/config.yaml –∏–∑ –ø—Ä–∏–º–µ—Ä–∞"; \
	else \
		echo "‚ö†Ô∏è  –§–∞–π–ª config/config.yaml —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"; \
	fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
status:
	@echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
	docker compose ps

# –ë—ç–∫–∞–ø –ë–î
backup-db:
	@echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ë–î..."
	docker compose exec postgres pg_dump -U postgres trade_hedge > backup_$(shell date +%Y%m%d_%H%M%S).sql

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î
restore-db:
	@echo "üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î –∏–∑ –±—ç–∫–∞–ø–∞..."
	@read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –±—ç–∫–∞–ø–∞: " backup_file; \
	docker compose exec -T postgres psql -U postgres trade_hedge < $$backup_file

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (–û–°–¢–û–†–û–ñ–ù–û!)
nuke:
	cd deploy/local && docker compose down -v --remove-orphans
	cd deploy/local && docker compose pull

# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
quickstart: setup-env
	@echo "üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç Trade Hedge"
	@echo ""
	@echo "1Ô∏è‚É£  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª deploy/local/.env (–æ—Å–æ–±–µ–Ω–Ω–æ API –∫–ª—é—á–∏)"
	@echo "2Ô∏è‚É£  –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config/config.yaml"
	@echo "3Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make docker-up"
	@echo "4Ô∏è‚É£  –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8081"
	@echo ""
	@echo "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –≤ README.md"
