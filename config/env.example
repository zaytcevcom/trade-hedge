# Пример файла переменных окружения для Trade Hedge
# Скопируйте в .env и заполните своими данными

# ======================
# Freqtrade Settings
# ======================
FREQTRADE_API_URL=http://localhost:8080/api/v1/status
FREQTRADE_USERNAME=your_username
FREQTRADE_PASSWORD=your_password

# ======================
# Bybit Settings  
# ======================
BYBIT_API_KEY=your_bybit_api_key
BYBIT_API_SECRET=your_bybit_api_secret
BYBIT_SPOT_URL=https://api.bybit.com/v5/order/create
BYBIT_BALANCE_URL=https://api.bybit.com/v5/account/wallet-balance
BYBIT_ORDER_STATUS_URL=https://api.bybit.com/v5/order/realtime

# ======================
# Database Settings
# ======================
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=your_db_password
DB_NAME=trade_hedge
DB_SSL_MODE=disable

# ======================
# Strategy Settings
# ======================
STRATEGY_POSITION_AMOUNT=100.0      # Фиксированная сумма позиции в USDT
STRATEGY_MAX_LOSS_PERCENT=3.0       # Максимальный процент убытка для хеджирования
STRATEGY_PROFIT_RATIO=1.5           # Коэффициент прибыли относительно убытка
STRATEGY_BASE_CURRENCY=USDT         # Базовая валюта для покупки
STRATEGY_CHECK_INTERVAL=300         # Интервал проверки в секундах (0 = одноразово)

# ======================
# Web UI Settings
# ======================
WEBUI_ENABLED=true                  # Включить веб-интерфейс
WEBUI_HOST=localhost                # Хост для веб-сервера
WEBUI_PORT=8081                     # Порт для веб-сервера

# ======================
# Production Tips
# ======================

# Для production рекомендуется:
# 1. Использовать строгие пароли
# 2. Настроить SSL для базы данных (DB_SSL_MODE=require)
# 3. Использовать переменные окружения вместо config.yaml
# 4. Настроить файрвол для ограничения доступа к веб-интерфейсу
# 5. Регулярно создавать бэкапы базы данных

# Пример для Docker:
# docker run -d --name trade-hedge \
#   --env-file .env \
#   -p 8081:8081 \
#   trade-hedge:latest

# Быстрый старт с Docker Compose:
# 1. cp env.example .env
# 2. # Заполните API ключи выше
# 3. docker compose up -d
# 4. open http://localhost:8081
